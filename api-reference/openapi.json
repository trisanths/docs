{
  "openapi": "3.1.0",
  "info": {
    "title": "CyrionAI API",
    "description": "Free AI API for nonprofits powered Cyrion Labs",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://ai.cyrionlabs.org",
      "description": "Production server"
    }
  ],
  "paths": {
    "/v1/chat/completions": {
      "post": {
        "tags": [
          "chat",
          "images",
          "videos",
          "audio"
        ],
        "summary": "Create Chat Completion",
        "description": "Create a chat completion (OpenAI compatible).",
        "operationId": "create_chat_completion_v1_chat_completions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatCompletionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/images/generations": {
      "post": {
        "tags": [
          "chat",
          "images",
          "videos",
          "audio"
        ],
        "summary": "Create Image",
        "description": "Generate images (OpenAI compatible).",
        "operationId": "create_image_v1_images_generations_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageGenerationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/images/variations": {
      "post": {
        "tags": [
          "chat",
          "images",
          "videos",
          "audio"
        ],
        "summary": "Create Image Variation",
        "description": "Create image variations (OpenAI compatible).",
        "operationId": "create_image_variation_v1_images_variations_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_image_variation_v1_images_variations_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageGenerationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/videos/generations": {
      "post": {
        "tags": [
          "chat",
          "images",
          "videos",
          "audio"
        ],
        "summary": "Create Video",
        "description": "Generate videos (Extension to OpenAI API).",
        "operationId": "create_video_v1_videos_generations_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoGenerationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/audio/transcriptions": {
      "post": {
        "tags": [
          "chat",
          "images",
          "videos",
          "audio"
        ],
        "summary": "Create Transcription",
        "description": "Transcribe audio (OpenAI compatible).",
        "operationId": "create_transcription_v1_audio_transcriptions_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_transcription_v1_audio_transcriptions_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioTranscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/models": {
      "get": {
        "tags": [
          "models"
        ],
        "summary": "List Models",
        "description": "List available models (OpenAI compatible).",
        "operationId": "list_models_v1_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/users": {
      "post": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Create User",
        "description": "Create a new user.",
        "operationId": "create_user_admin_users_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "List Users",
        "description": "List all users.",
        "operationId": "list_users_admin_users_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  },
                  "title": "Response List Users Admin Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{user_id}": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Get User",
        "description": "Get a specific user.",
        "operationId": "get_user_admin_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/grants": {
      "post": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Create Grant",
        "description": "Create a new grant for a user.",
        "operationId": "create_grant_admin_grants_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "List Grants",
        "description": "List grants, optionally filtered by user.",
        "operationId": "list_grants_admin_grants_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrantResponse"
                  },
                  "title": "Response List Grants Admin Grants Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{user_id}/usage": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Get User Usage Stats",
        "description": "Get usage statistics for a user.",
        "operationId": "get_user_usage_stats_admin_users__user_id__usage_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "default": 30,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/health": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Get System Health",
        "description": "Get system health status.",
        "operationId": "get_system_health_admin_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/usage/analytics": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Get Usage Analytics",
        "description": "Get usage analytics across all users.",
        "operationId": "get_usage_analytics_admin_usage_analytics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 90,
              "minimum": 1,
              "default": 7,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "root"
        ],
        "summary": "Root",
        "description": "Root endpoint.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Metrics",
        "description": "Prometheus metrics endpoint.",
        "operationId": "get_metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AudioTranscriptionResponse": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "AudioTranscriptionResponse",
        "description": "Audio transcription response."
      },
      "Body_create_image_variation_v1_images_variations_post": {
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "title": "Image"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "default": "dall-e-2"
          },
          "n": {
            "type": "integer",
            "title": "N",
            "default": 1
          },
          "response_format": {
            "type": "string",
            "title": "Response Format",
            "default": "url"
          },
          "size": {
            "type": "string",
            "title": "Size",
            "default": "1024x1024"
          }
        },
        "type": "object",
        "required": [
          "image"
        ],
        "title": "Body_create_image_variation_v1_images_variations_post"
      },
      "Body_create_transcription_v1_audio_transcriptions_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "default": "whisper-1"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "response_format": {
            "type": "string",
            "title": "Response Format",
            "default": "json"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_create_transcription_v1_audio_transcriptions_post"
      },
      "ChatCompletionChoice": {
        "properties": {
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "message": {
            "$ref": "#/components/schemas/ChatCompletionMessage"
          },
          "finish_reason": {
            "type": "string",
            "title": "Finish Reason"
          }
        },
        "type": "object",
        "required": [
          "index",
          "message",
          "finish_reason"
        ],
        "title": "ChatCompletionChoice",
        "description": "Chat completion choice."
      },
      "ChatCompletionMessage": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ChatCompletionRole"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "ChatCompletionMessage",
        "description": "Chat completion message."
      },
      "ChatCompletionRequest": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/ChatCompletionMessage"
            },
            "type": "array",
            "title": "Messages"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 8192,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "default": 1
          },
          "top_p": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Top P",
            "default": 1
          },
          "n": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "N",
            "default": 1
          },
          "stop": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop"
          },
          "presence_penalty": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2,
                "minimum": -2
              },
              {
                "type": "null"
              }
            ],
            "title": "Presence Penalty",
            "default": 0
          },
          "frequency_penalty": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2,
                "minimum": -2
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency Penalty",
            "default": 0
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          },
          "web_search": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Web Search",
            "default": false
          },
          "image": {
            "anyOf": [
              {

              },
              {
                "type": "null"
              }
            ],
            "title": "Image"
          },
          "media": {
            "anyOf": [
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Media"
          },
          "modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modalities"
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls"
          }
        },
        "type": "object",
        "required": [
          "model",
          "messages"
        ],
        "title": "ChatCompletionRequest",
        "description": "OpenAI compatible chat completion request."
      },
      "ChatCompletionResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "object": {
            "type": "string",
            "title": "Object",
            "default": "chat.completion"
          },
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "choices": {
            "items": {
              "$ref": "#/components/schemas/ChatCompletionChoice"
            },
            "type": "array",
            "title": "Choices"
          },
          "usage": {
            "$ref": "#/components/schemas/ChatCompletionUsage"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created",
          "model",
          "choices",
          "usage"
        ],
        "title": "ChatCompletionResponse",
        "description": "OpenAI compatible chat completion response."
      },
      "ChatCompletionRole": {
        "type": "string",
        "enum": [
          "system",
          "user",
          "assistant"
        ],
        "title": "ChatCompletionRole",
        "description": "Chat completion message roles."
      },
      "ChatCompletionUsage": {
        "properties": {
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens"
          }
        },
        "type": "object",
        "required": [
          "prompt_tokens",
          "completion_tokens",
          "total_tokens"
        ],
        "title": "ChatCompletionUsage",
        "description": "Chat completion usage statistics."
      },
      "GrantCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "grant_amount": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "title": "Grant Amount"
          },
          "grant_amount_dollars": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Amount Dollars"
          },
          "reference_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Model",
            "default": "gpt-4o-mini"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "grant_amount"
        ],
        "title": "GrantCreate",
        "description": "Schema for creating a grant."
      },
      "GrantResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "grant_amount": {
            "type": "integer",
            "title": "Grant Amount"
          },
          "used_tokens": {
            "type": "integer",
            "title": "Used Tokens"
          },
          "remaining_tokens": {
            "type": "integer",
            "title": "Remaining Tokens"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "grant_amount",
          "used_tokens",
          "remaining_tokens",
          "expires_at",
          "is_active",
          "created_at"
        ],
        "title": "GrantResponse",
        "description": "Schema for grant response."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "providers": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object",
            "title": "Providers"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "version",
          "providers"
        ],
        "title": "HealthResponse",
        "description": "Health check response."
      },
      "ImageData": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "b64_json": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "B64 Json"
          },
          "revised_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revised Prompt"
          }
        },
        "type": "object",
        "title": "ImageData",
        "description": "Image data response."
      },
      "ImageGenerationRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "default": "flux"
          },
          "n": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "N",
            "default": 1
          },
          "size": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size",
            "default": "1024x1024"
          },
          "response_format": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(url|b64_json)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format",
            "default": "url"
          },
          "quality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality",
            "default": "standard"
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "ImageGenerationRequest",
        "description": "Image generation request."
      },
      "ImageGenerationResponse": {
        "properties": {
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ImageData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "created",
          "data"
        ],
        "title": "ImageGenerationResponse",
        "description": "Image generation response."
      },
      "ModelsResponse": {
        "properties": {
          "object": {
            "type": "string",
            "title": "Object",
            "default": "list"
          },
          "data": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ModelsResponse",
        "description": "Models list response."
      },
      "UsageStatsResponse": {
        "properties": {
          "total_requests": {
            "type": "integer",
            "title": "Total Requests"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens"
          },
          "total_cost_tokens": {
            "type": "integer",
            "title": "Total Cost Tokens"
          },
          "remaining_tokens": {
            "type": "integer",
            "title": "Remaining Tokens"
          },
          "requests_today": {
            "type": "integer",
            "title": "Requests Today"
          },
          "tokens_today": {
            "type": "integer",
            "title": "Tokens Today"
          },
          "average_response_time": {
            "type": "number",
            "title": "Average Response Time"
          }
        },
        "type": "object",
        "required": [
          "total_requests",
          "total_tokens",
          "total_cost_tokens",
          "remaining_tokens",
          "requests_today",
          "tokens_today",
          "average_response_time"
        ],
        "title": "UsageStatsResponse",
        "description": "Usage statistics response."
      },
      "UserCreate": {
        "properties": {
          "organization_name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Organization Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "is_nonprofit": {
            "type": "boolean",
            "title": "Is Nonprofit",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "organization_name",
          "email"
        ],
        "title": "UserCreate",
        "description": "Schema for creating a new user."
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key"
          },
          "organization_name": {
            "type": "string",
            "title": "Organization Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_nonprofit": {
            "type": "boolean",
            "title": "Is Nonprofit"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "api_key",
          "organization_name",
          "email",
          "is_active",
          "is_nonprofit",
          "created_at"
        ],
        "title": "UserResponse",
        "description": "Schema for user response."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VideoData": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "b64_json": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "B64 Json"
          }
        },
        "type": "object",
        "title": "VideoData",
        "description": "Video data response."
      },
      "VideoGenerationRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "response_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format",
            "default": "url"
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "VideoGenerationRequest",
        "description": "Video generation request."
      },
      "VideoGenerationResponse": {
        "properties": {
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/VideoData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "created",
          "data"
        ],
        "title": "VideoGenerationResponse",
        "description": "Video generation response."
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
}